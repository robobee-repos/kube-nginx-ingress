/*
 * 
 * Optional:
 * 
 * vars.nginxIngressController.prometheus.enabled
 */

prometheus-monitoring-yaml(parent, vars) ::= <<
---

apiVersion: v1
kind: Service
metadata:
  name: ingress-nginx-monitoring
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx-monitoring
    app.kubernetes.io/part-of: ingress-nginx
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  ports:
  - name: metrics
    port: 10254
    targetPort: 10254
  selector:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx

---

<if(vars.nginxIngressController.prometheus.enabled)>

apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: ingress-nginx-monitoring
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx-monitoring
    app.kubernetes.io/part-of: ingress-nginx
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: ingress-nginx-monitoring
  endpoints:
    - port: metrics

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: prometheus-k8s
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx-monitoring
    app.kubernetes.io/part-of: ingress-nginx
    addonmanager.kubernetes.io/mode: Reconcile
rules:
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  - pods
  verbs:
  - get
  - list
  - watch

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: prometheus-k8s
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx-monitoring
    app.kubernetes.io/part-of: ingress-nginx
    addonmanager.kubernetes.io/mode: Reconcile
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: prometheus-k8s
subjects:
- kind: ServiceAccount
  name: prometheus-k8s
  namespace: monitoring

---

<endif>
>>
