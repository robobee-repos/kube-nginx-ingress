/*
 * Mandatory:
 * 
 * vars.lego.email
 * vars.lego.url
 * vars.lego.image.name
 * vars.lego.image.version
 * vars.lego.limits.cpu
 * vars.lego.limits.memory
 * vars.lego.requests.cpu
 * vars.lego.requests.memory
 * 
 * Optional:
 * 
 * vars.lego.tolerations[].key
 * vars.lego.tolerations[].effect
 * vars.lego.tolerations[].value
 */

import "tolerations.stg"

cc-lego-yaml(parent, vars) ::= <<

---

apiVersion: v1
kind: ConfigMap
metadata:
  namespace: kube-ingress
  name: kube-lego
  labels:
    name: kube-lego
    robobeerun.com/group: cluster-ingress
data:
  # modify this to specify your address
  lego.email: "<vars.lego.email>"
  # configure letsencrypt's production api
  lego.url: "<vars.lego.url>"

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kube-lego
  namespace: kube-ingress
  labels:
    app: kube-lego
    robobeerun.com/group: cluster-ingress
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: kube-lego
        robobeerun.com/group: cluster-ingress
    spec:
      containers:
      - image: <vars.lego.image.name>:<vars.lego.image.version>
        name: kube-lego
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: <vars.lego.limits.cpu>
            memory: <vars.lego.limits.memory>
          requests:
            cpu: <vars.lego.requests.cpu>
            memory: <vars.lego.requests.memory>
        env:
        - name: LEGO_EMAIL
          valueFrom:
            configMapKeyRef:
              name: kube-lego
              key: lego.email
        - name: LEGO_URL
          valueFrom:
            configMapKeyRef:
              name: kube-lego
              key: lego.url
        - name: LEGO_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: LEGO_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: LEGO_LOG_LEVEL
          value: "<vars.lego.logLevel>"
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 1
<tolerations(parent, vars, vars.lego.tolerations)>

>>
